name: Build Release Binaries

on:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: hledger-import-linux-amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: hledger-import-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: hledger-import-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: hledger-import-windows-amd64.exe

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Prepare binary
        shell: bash
        run: |
          mkdir -p artifacts
          BINARY_NAME="hledger-import"
          
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp "target/${{ matrix.target }}/release/${BINARY_NAME}.exe" "artifacts/${{ matrix.artifact_name }}"
          else
            cp "target/${{ matrix.target }}/release/${BINARY_NAME}" "artifacts/${{ matrix.artifact_name }}"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: artifacts/${{ matrix.artifact_name }}

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/${{ matrix.artifact_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}